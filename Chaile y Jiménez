#include <Wire.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_BMP280.h>
#include <LiquidCrystal_I2C.h>

Adafruit_BMP280 bmp;
LiquidCrystal_I2C lcd(0x27, 16, 2); // cambia a 0x3F si tu LCD usa esa dirección

const int BUZZER_PIN = 6; // pin donde conectas el buzzer
const float T_ALARM = 35.0; // °C: temperatura de alarma
float tempC = 0;
float pres_hPa = 0;

void setup() {
Serial.begin(9600);
pinMode(BUZZER_PIN, OUTPUT);
digitalWrite(BUZZER_PIN, LOW); // buzzer apagado

lcd.init();
lcd.backlight();
lcd.clear();
lcd.setCursor(0,0); lcd.print("Inicializando...");

if (!bmp.begin(0x76)) { // intenta dirección 0x76
if (!bmp.begin(0x77)) { // si no, prueba 0x77
lcd.clear();
lcd.setCursor(0,0); lcd.print("BMP280 ERROR");
while (1); // detener
}
}

lcd.clear();
}

void loop() {
tempC = bmp.readTemperature();
pres_hPa = bmp.readPressure() / 100.0;

unsigned long now = millis();

// Buzzer intermitente si pasa el umbral
if (tempC >= T_ALARM) {
if ((now / 500) % 2 == 0) { // alterna cada 500 ms
digitalWrite(BUZZER_PIN, HIGH);
} else {
digitalWrite(BUZZER_PIN, LOW);
}
} else {
digitalWrite(BUZZER_PIN, LOW);
}

// Monitor serie
Serial.print("Temp: "); Serial.print(tempC,1); Serial.print(" C ");
Serial.print("Press: "); Serial.print(pres_hPa,0); Serial.print(" hPa ");
Serial.print("Buzzer: "); Serial.println(tempC >= T_ALARM ? "BEEP" : "OFF");

// Pantalla LCD
lcd.setCursor(0,0);
lcd.print("Temp:"); lcd.print(tempC,1); lcd.print((char)223); lcd.print("C ");
lcd.setCursor(0,1);
lcd.print("Press:"); lcd.print(pres_hPa,0); lcd.print("hPa ");

delay(200);
}
